openapi: 3.0.0
info:
  title: Authentication API
  version: 1.0.0

paths:
  /auth/login:
    post:
      summary: Login user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: Username user
                password:
                  type: string
                  description: Password user
      responses:
        '200':
          description: Login berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Login berhasil"
                  token:
                    type: string
                    description: JWT token
                  token_type:
                    type: string
                    example: "Bearer"
        '401':
          description: Login gagal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/refresh:
    post:
      summary: Refresh JWT token
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
                  description: Refresh token untuk mendapatkan token baru
      responses:
        '200':
          description: Token berhasil di-refresh
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Token berhasil di-refresh"
                  token:
                    type: string
                    description: JWT token baru
                  token_type:
                    type: string
                    example: "Bearer"
        '401':
          description: Refresh token tidak valid atau expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/register:
    post:
      summary: Register user baru
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - username
                - password
                - password_confirmation
              properties:
                name:
                  type: string
                  description: Nama lengkap user
                email:
                  type: string
                  format: email
                  description: Email user
                username:
                  type: string
                  description: Username user
                password:
                  type: string
                  minLength: 8
                  description: Password user
                password_confirmation:
                  type: string
                  description: Konfirmasi password
      responses:
        '200':
          description: Register berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        description: JWT token
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          email:
                            type: string
                          username:
                            type: string
                  message:
                    type: string
        '422':
          description: Validasi gagal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Validasi gagal"
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
